{"version":3,"sources":["components/Counter.jsx","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","type","onClick","className","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACrB,iCACE,6CACaH,IAEb,4BACEI,KAAK,SACLC,QAASJ,EACTK,UAAU,4BAHZ,UAOA,4BACEF,KAAK,SACLC,QAASH,EACTI,UAAU,6BAHZ,YAOA,4BACEF,KAAK,SACLC,QAASF,EACTG,UAAU,2BAHZ,eCuBWC,G,kNAtCbC,MAAQ,CACNR,MAAO,G,EAGTC,OAAS,WACP,EAAKQ,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,O,EAIzBE,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,S,EAIzBG,SAAW,WACS,EAAKK,MAAfR,MAEC,IAAM,EACX,EAAKE,OAAO,EAAKD,UACjB,EAAKA,U,uDAIT,OACE,yBAAKK,UAAU,OACb,kBAAC,EAAD,CACEN,MAAOU,KAAKF,MAAMR,MAClBC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,gB,GAhCPQ,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ba9e699c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ count, addOne, add100, increase }) => (\n  <section>\n    <h1>\n      {`Count: ${count}`}\n    </h1>\n    <button\n      type=\"button\"\n      onClick={addOne}\n      className=\"ui green inverted button\"\n    >\n      Plus 1\n    </button>\n    <button\n      type=\"button\"\n      onClick={add100}\n      className=\"ui orange inverted button\"\n    >\n      Plus 100\n    </button>\n    <button\n      type=\"button\"\n      onClick={increase}\n      className=\"ui blue inverted button\"\n    >\n      Increase\n    </button>\n  </section>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Counter } from './components/Counter';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => {\n    const { count } = this.state;\n\n    (count % 5 === 0)\n      ? this.add100(this.addOne())\n      : this.addOne();\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Counter\n          count={this.state.count}\n          addOne={this.addOne}\n          add100={this.add100}\n          increase={this.increase}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}